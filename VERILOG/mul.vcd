$date
	Mon Nov 28 21:53:59 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$scope module mul $end
$var wire 4 ! a [3:0] $end
$var wire 1 " a1 $end
$var wire 1 # a10 $end
$var wire 1 $ a11 $end
$var wire 1 % a12 $end
$var wire 1 & a13 $end
$var wire 1 ' a14 $end
$var wire 1 ( a15 $end
$var wire 1 ) a16 $end
$var wire 1 * a2 $end
$var wire 1 + a3 $end
$var wire 1 , a4 $end
$var wire 1 - a5 $end
$var wire 1 . a6 $end
$var wire 1 / a7 $end
$var wire 1 0 a8 $end
$var wire 1 1 a9 $end
$var wire 4 2 b [3:0] $end
$var wire 1 3 sum9 $end
$var wire 1 4 sum8 $end
$var wire 1 5 sum7 $end
$var wire 1 6 sum6 $end
$var wire 1 7 sum5 $end
$var wire 1 8 sum4 $end
$var wire 1 9 sum3 $end
$var wire 1 : sum2 $end
$var wire 1 ; sum12 $end
$var wire 1 < sum11 $end
$var wire 1 = sum10 $end
$var wire 1 > sum1 $end
$var wire 8 ? p [7:0] $end
$var wire 1 @ c9 $end
$var wire 1 A c8 $end
$var wire 1 B c7 $end
$var wire 1 C c6 $end
$var wire 1 D c5 $end
$var wire 1 E c4 $end
$var wire 1 F c3 $end
$var wire 1 G c2 $end
$var wire 1 H c12 $end
$var wire 1 I c11 $end
$var wire 1 J c10 $end
$var wire 1 K c1 $end
$scope module f11 $end
$var wire 1 I cout $end
$var wire 1 L z $end
$var wire 1 M y $end
$var wire 1 N x $end
$var wire 1 < sum $end
$var wire 1 7 cin $end
$var wire 1 @ b $end
$var wire 1 J a $end
$scope module h1 $end
$var wire 1 M c $end
$var wire 1 N s $end
$var wire 1 @ b $end
$var wire 1 J a $end
$upscope $end
$scope module h2 $end
$var wire 1 N a $end
$var wire 1 L c $end
$var wire 1 < s $end
$var wire 1 7 b $end
$upscope $end
$upscope $end
$scope module f12 $end
$var wire 1 I a $end
$var wire 1 " cin $end
$var wire 1 H cout $end
$var wire 1 O z $end
$var wire 1 P y $end
$var wire 1 Q x $end
$var wire 1 ; sum $end
$var wire 1 D b $end
$scope module h1 $end
$var wire 1 I a $end
$var wire 1 P c $end
$var wire 1 Q s $end
$var wire 1 D b $end
$upscope $end
$scope module h2 $end
$var wire 1 Q a $end
$var wire 1 " b $end
$var wire 1 O c $end
$var wire 1 ; s $end
$upscope $end
$upscope $end
$scope module f4 $end
$var wire 1 - b $end
$var wire 1 . cin $end
$var wire 1 E cout $end
$var wire 1 R z $end
$var wire 1 S y $end
$var wire 1 T x $end
$var wire 1 8 sum $end
$var wire 1 K a $end
$scope module h1 $end
$var wire 1 - b $end
$var wire 1 S c $end
$var wire 1 T s $end
$var wire 1 K a $end
$upscope $end
$scope module h2 $end
$var wire 1 T a $end
$var wire 1 . b $end
$var wire 1 R c $end
$var wire 1 8 s $end
$upscope $end
$upscope $end
$scope module f5 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 E cin $end
$var wire 1 D cout $end
$var wire 1 U z $end
$var wire 1 V y $end
$var wire 1 W x $end
$var wire 1 7 sum $end
$scope module h1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 V c $end
$var wire 1 W s $end
$upscope $end
$scope module h2 $end
$var wire 1 W a $end
$var wire 1 E b $end
$var wire 1 U c $end
$var wire 1 7 s $end
$upscope $end
$upscope $end
$scope module f6 $end
$var wire 1 # a $end
$var wire 1 C cout $end
$var wire 1 X z $end
$var wire 1 Y y $end
$var wire 1 Z x $end
$var wire 1 6 sum $end
$var wire 1 > cin $end
$var wire 1 G b $end
$scope module h1 $end
$var wire 1 # a $end
$var wire 1 Y c $end
$var wire 1 Z s $end
$var wire 1 G b $end
$upscope $end
$scope module h2 $end
$var wire 1 Z a $end
$var wire 1 X c $end
$var wire 1 6 s $end
$var wire 1 > b $end
$upscope $end
$upscope $end
$scope module f7 $end
$var wire 1 & a $end
$var wire 1 B cout $end
$var wire 1 [ z $end
$var wire 1 \ y $end
$var wire 1 ] x $end
$var wire 1 5 sum $end
$var wire 1 F cin $end
$var wire 1 : b $end
$scope module h1 $end
$var wire 1 & a $end
$var wire 1 \ c $end
$var wire 1 ] s $end
$var wire 1 : b $end
$upscope $end
$scope module h2 $end
$var wire 1 ] a $end
$var wire 1 [ c $end
$var wire 1 5 s $end
$var wire 1 F b $end
$upscope $end
$upscope $end
$scope module f8 $end
$var wire 1 1 a $end
$var wire 1 B b $end
$var wire 1 6 cin $end
$var wire 1 A cout $end
$var wire 1 ^ z $end
$var wire 1 _ y $end
$var wire 1 ` x $end
$var wire 1 4 sum $end
$scope module h1 $end
$var wire 1 1 a $end
$var wire 1 B b $end
$var wire 1 _ c $end
$var wire 1 ` s $end
$upscope $end
$scope module h2 $end
$var wire 1 ` a $end
$var wire 1 6 b $end
$var wire 1 ^ c $end
$var wire 1 4 s $end
$upscope $end
$upscope $end
$scope module f9 $end
$var wire 1 , a $end
$var wire 1 8 b $end
$var wire 1 C cin $end
$var wire 1 @ cout $end
$var wire 1 a z $end
$var wire 1 b y $end
$var wire 1 c x $end
$var wire 1 3 sum $end
$scope module h1 $end
$var wire 1 , a $end
$var wire 1 8 b $end
$var wire 1 b c $end
$var wire 1 c s $end
$upscope $end
$scope module h2 $end
$var wire 1 c a $end
$var wire 1 C b $end
$var wire 1 a c $end
$var wire 1 3 s $end
$upscope $end
$upscope $end
$scope module h1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 K c $end
$var wire 1 > s $end
$upscope $end
$scope module h10 $end
$var wire 1 A a $end
$var wire 1 3 b $end
$var wire 1 J c $end
$var wire 1 = s $end
$upscope $end
$scope module h2 $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 G c $end
$var wire 1 : s $end
$upscope $end
$scope module h3 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 F c $end
$var wire 1 9 s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
b0 ?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
b0 2
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
b0 !
$end
#10000
1<
1M
1P
1J
1H
1I
1A
0O
0L
0=
1_
0Q
0N
17
13
1B
1D
1@
1E
04
1C
1[
1;
1V
1b
1S
18
1K
0`
1Y
1G
1]
1F
1"
1*
1+
1,
1-
1.
1/
10
11
1#
1$
1%
1&
1'
1(
b11100001 ?
1)
b1111 2
b1111 !
#70000
